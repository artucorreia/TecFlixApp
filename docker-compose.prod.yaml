services:
  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   dns:
  #     - 8.8.8.8
  #   volumes:
  #     - ./frontend/dist:/output # Build do Angular será exportado para ./frontend/dist
  #   command: echo "Build concluído"

  # back
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./db.env
      - ./backend/.env
    ports:
      - 8081:8081
    depends_on:
      - postgres
    networks:
      - app
    restart: always

  # postgres
  postgres:
    image: postgres:17-alpine
    container_name: postgres
    ports:
      - 2345:5432
    env_file:
      - ./db.env
    restart: always
    networks:
      - app
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # nginx
  nginx:
    image: nginx:1.27.3-alpine
    container_name: nginx
    ports:
      - 80:80
      # - '443:443'
    volumes:
      - ./frontend/dist/tecflix:/usr/share/nginx/html
      # - ./frontend/mime.types:/etc/nginx/mime.types
      - ./data/nginx:/etc/nginx/conf.d
      # - ./data/certbot/conf:/etc/letsencrypt
      # - ./data/certbot/www:/var/www/certbot
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
    networks:
      - app
    depends_on:
      # - certbot
      # - frontend
      - backend
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  app:
